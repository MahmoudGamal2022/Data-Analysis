/*Query 1 - query used for first insight*/
SELECT BillingCountry,
       count(BillingCountry) AS Invoices
FROM Invoice
GROUP BY BillingCountry
ORDER BY Invoices DESC

/*Query 2 - query used for two insight*/
SELECT BillingCountry,
       sum(total) AS Seles
FROM Invoice
GROUP BY BillingCountry
ORDER BY Seles DESC

/*Query 3 - query used for three insight*/
SELECT BillingCity,
       SUM(Total) AS Dollars
FROM Invoice
GROUP BY BillingCity
ORDER BY Dollars DESC
LIMIT 10

/*Query 4 - query used for four insight*/
SELECT i.CustomerId,
       c.FirstName,
       SUM(i.Total) AS money_spent
FROM Invoice i
LEFT JOIN Customer c ON i.CustomerId == c.CustomerId
GROUP BY i.CustomerId
ORDER BY money_spent DESC
LIMIT 10

/*Query 5 - query used for five insight*/
SELECT g.Name,
       count(a.ArtistId) AS artist_number
FROM Artist a
JOIN Album al ON a.ArtistId == al.ArtistId
JOIN Track t ON al.AlbumId == t.AlbumId
JOIN Genre g ON t.GenreId == g.GenreId
GROUP BY g.Name
ORDER BY artist_number DESC

/*Query 6 - query used for six insight*/
SELECT a.ArtistId,
       g.Name,
       count(a.ArtistId) AS artist_number
FROM Artist a
JOIN Album al ON a.ArtistId == al.ArtistId
JOIN Track t ON al.AlbumId == t.AlbumId
JOIN Genre g ON t.GenreId == g.GenreId
GROUP BY g.Name
ORDER BY artist_number DESC

/*Query 7 - query used for seven insight*/
SELECT al.AlbumId,
       al.Title,
       SUM(il.unitprice * il.quantity) AS top_album
FROM Album al
JOIN Track t ON al.AlbumId == t.AlbumId
JOIN InvoiceLine il ON t.TrackId == il.TrackId
GROUP BY al.Title
ORDER BY top_album DESC
LIMIT 10

/*Query 8 - query used for eight insight*/
SELECT a.Name,
       sum(il.UnitPrice * il.Quantity) AS best_sale
FROM Artist AS a
JOIN Album AS al ON a.ArtistId == al.ArtistId
JOIN Track AS t ON al.AlbumId == t.AlbumId
JOIN InvoiceLine AS il ON t.TrackId == il.TrackId
GROUP BY a.Name
ORDER BY best_sale DESC
LIMIT 10

/*Query 9 - query used for nine insight*/
SELECT g.Name,
       g.GenreId,
       sum(il.Quantity * il.UnitPrice) AS sum_genre
FROM Genre g
JOIN Track t ON g.GenreId == t.GenreId
JOIN InvoiceLine il ON t.TrackId == il.TrackId
GROUP BY g.Name
ORDER BY sum_genre DESC
